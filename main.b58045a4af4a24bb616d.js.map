{"version":3,"sources":["./src/environments/environment.ts","./src/app/openai/openai.component.ts","./src/app/openai/openai.component.html","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.b58045a4af4a24bb616d.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-openai',\n  templateUrl: './openai.component.html',\n  styleUrls: ['./openai.component.less'],\n})\nexport class OpenaiComponent implements OnInit {\n  answer: string;\n\n  prompt = `Help me write a code to generate wallet address with js.\nThen you write a wallet address casually, and display it directly in your answer,`;\n\n  fetching = false;\n\n  ws: WebSocket;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.connectToServer().then((ws: WebSocket) => {\n      this.ws = ws;\n      ws.onmessage = (e) => {\n        const parsedData = JSON.parse(e.data);\n        this.answer = parsedData.open_ai;\n        if (parsedData.is_end) {\n          this.fetching = false;\n        }\n      };\n    });\n  }\n\n  connectToServer() {\n    const ws = new WebSocket(\n      'wss://63c6-103-116-72-172.ngrok-free.app/ws/open_ai'\n    );\n    return new Promise((resolve, reject) => {\n      const timer = setInterval(() => {\n        if (ws.readyState === 1) {\n          clearInterval(timer);\n          resolve(ws);\n        }\n      }, 10);\n    });\n  }\n\n  go() {\n    if (this.prompt) {\n      this.fetching = true;\n      this.ws.send(\n        JSON.stringify({\n          prompt: `The below is your answer rules: 1. Your answer should be Markdown format; 2. All wallet address should be a hyperlink link;  Below is the question: ${this.prompt}`,\n        })\n      );\n    }\n  }\n\n  test(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n    // A tag\n    if (e.target instanceof HTMLAnchorElement) {\n      const address = e.target.href.split('/').pop();\n      console.log(e.target.href);\n      window.open('https://www.google.com?a=' + address, '_blank');\n    }\n  }\n\n  showAddress(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n    // A tag\n    if (e.target instanceof HTMLAnchorElement) {\n      const pathArr = e.target.href.split('/');\n      let addr = '';\n\n      pathArr.forEach((item, index) => {\n        if (item.startsWith('0x')) {\n          addr = item;\n        }\n      });\n\n      alert('Maybe your address is: ' + addr);\n    }\n  }\n}\n","<section>\n  <textarea\n    nz-input\n    placeholder=\"The Question\"\n    [nzAutosize]=\"{ minRows: 4, maxRows: 8 }\"\n    [(ngModel)]=\"prompt\"\n  ></textarea>\n\n  <button nz-button nzType=\"primary\" [nzLoading]=\"fetching\" (click)=\"go()\">\n    GO\n  </button>\n\n  <markdown style=\"width: 100%\" [data]=\"answer\" (click)=\"showAddress($event)\">\n  </markdown>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.less'],\n})\nexport class TestComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  send() {\n    Notification.requestPermission().then((result) => {\n      if (result === 'granted') {\n        new Notification('⏰ 时间到！', {\n          icon: 'https://i.seadn.io/gae/H8jOCJuQokNqGBpkBN5wk1oZwO7LM8bNnrHCaekV2nKjnCqw6UB5oaH8XyNeBDj6bA_n1mjejzhFQUP3O1NfjFLHr3FOaeHcTOOT?w=500&auto=format',\n          body: '第二个番茄',\n        });\n      }\n    });\n  }\n}\n","<button (click)=\"send()\">Send Notification</button>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'openai-guanrenying';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { registerLocaleData } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport zh from '@angular/common/locales/zh';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NZ_I18N, zh_CN } from 'ng-zorro-antd/i18n';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OpenaiComponent } from './openai/openai.component';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { TestComponent } from './test/test.component';\nregisterLocaleData(zh);\n\n@NgModule({\n  declarations: [AppComponent, OpenaiComponent, TestComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NzInputModule,\n    NzButtonModule,\n    MarkdownModule.forRoot(),\n  ],\n  providers: [{ provide: NZ_I18N, useValue: zh_CN }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OpenaiComponent } from './openai/openai.component';\nimport { TestComponent } from './test/test.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: OpenaiComponent,\n  },\n  {\n    path: 'test',\n    component: TestComponent,\n  },\n\n  {\n    path: '*',\n    redirectTo: '.',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}